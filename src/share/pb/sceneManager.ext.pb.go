// Code generated by protoc-gen-go.
// source: sceneManager.ext.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MoveRequest struct {
	MapId       int64  `protobuf:"varint,1,opt,name=mapId" json:"mapId,omitempty"`
	SrcPosition *Point `protobuf:"bytes,2,opt,name=srcPosition" json:"srcPosition,omitempty"`
	DstPosition *Point `protobuf:"bytes,3,opt,name=dstPosition" json:"dstPosition,omitempty"`
}

func (m *MoveRequest) Reset()                    { *m = MoveRequest{} }
func (m *MoveRequest) String() string            { return proto.CompactTextString(m) }
func (*MoveRequest) ProtoMessage()               {}
func (*MoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *MoveRequest) GetMapId() int64 {
	if m != nil {
		return m.MapId
	}
	return 0
}

func (m *MoveRequest) GetSrcPosition() *Point {
	if m != nil {
		return m.SrcPosition
	}
	return nil
}

func (m *MoveRequest) GetDstPosition() *Point {
	if m != nil {
		return m.DstPosition
	}
	return nil
}

type MoveResponse struct {
	MapId       int64  `protobuf:"varint,1,opt,name=mapId" json:"mapId,omitempty"`
	SrcPosition *Point `protobuf:"bytes,2,opt,name=srcPosition" json:"srcPosition,omitempty"`
	DstPosition *Point `protobuf:"bytes,3,opt,name=dstPosition" json:"dstPosition,omitempty"`
	UserId      int64  `protobuf:"varint,4,opt,name=userId" json:"userId,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
}

func (m *MoveResponse) Reset()                    { *m = MoveResponse{} }
func (m *MoveResponse) String() string            { return proto.CompactTextString(m) }
func (*MoveResponse) ProtoMessage()               {}
func (*MoveResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *MoveResponse) GetMapId() int64 {
	if m != nil {
		return m.MapId
	}
	return 0
}

func (m *MoveResponse) GetSrcPosition() *Point {
	if m != nil {
		return m.SrcPosition
	}
	return nil
}

func (m *MoveResponse) GetDstPosition() *Point {
	if m != nil {
		return m.DstPosition
	}
	return nil
}

func (m *MoveResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *MoveResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type InGameRequest struct {
}

func (m *InGameRequest) Reset()                    { *m = InGameRequest{} }
func (m *InGameRequest) String() string            { return proto.CompactTextString(m) }
func (*InGameRequest) ProtoMessage()               {}
func (*InGameRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type InGameResponse struct {
}

func (m *InGameResponse) Reset()                    { *m = InGameResponse{} }
func (m *InGameResponse) String() string            { return proto.CompactTextString(m) }
func (*InGameResponse) ProtoMessage()               {}
func (*InGameResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type MapListRequest struct {
}

func (m *MapListRequest) Reset()                    { *m = MapListRequest{} }
func (m *MapListRequest) String() string            { return proto.CompactTextString(m) }
func (*MapListRequest) ProtoMessage()               {}
func (*MapListRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

type MapListResponse struct {
}

func (m *MapListResponse) Reset()                    { *m = MapListResponse{} }
func (m *MapListResponse) String() string            { return proto.CompactTextString(m) }
func (*MapListResponse) ProtoMessage()               {}
func (*MapListResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func init() {
	proto.RegisterType((*MoveRequest)(nil), "pb.MoveRequest")
	proto.RegisterType((*MoveResponse)(nil), "pb.MoveResponse")
	proto.RegisterType((*InGameRequest)(nil), "pb.InGameRequest")
	proto.RegisterType((*InGameResponse)(nil), "pb.InGameResponse")
	proto.RegisterType((*MapListRequest)(nil), "pb.MapListRequest")
	proto.RegisterType((*MapListResponse)(nil), "pb.MapListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for RoomManagerExtService service

type RoomManagerExtServiceClient interface {
	// 加入某张地图
	Move(ctx context.Context, in *MoveRequest, opts ...client.CallOption) (*MoveResponse, error)
	InGame(ctx context.Context, in *InGameRequest, opts ...client.CallOption) (*InGameResponse, error)
	// 地图列表
	MapList(ctx context.Context, in *MapListRequest, opts ...client.CallOption) (*MapListResponse, error)
}

type roomManagerExtServiceClient struct {
	c           client.Client
	serviceName string
}

func NewRoomManagerExtServiceClient(serviceName string, c client.Client) RoomManagerExtServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "pb"
	}
	return &roomManagerExtServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *roomManagerExtServiceClient) Move(ctx context.Context, in *MoveRequest, opts ...client.CallOption) (*MoveResponse, error) {
	req := c.c.NewRequest(c.serviceName, "RoomManagerExtService.Move", in)
	out := new(MoveResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagerExtServiceClient) InGame(ctx context.Context, in *InGameRequest, opts ...client.CallOption) (*InGameResponse, error) {
	req := c.c.NewRequest(c.serviceName, "RoomManagerExtService.InGame", in)
	out := new(InGameResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagerExtServiceClient) MapList(ctx context.Context, in *MapListRequest, opts ...client.CallOption) (*MapListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "RoomManagerExtService.MapList", in)
	out := new(MapListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RoomManagerExtService service

type RoomManagerExtServiceHandler interface {
	// 加入某张地图
	Move(context.Context, *MoveRequest, *MoveResponse) error
	InGame(context.Context, *InGameRequest, *InGameResponse) error
	// 地图列表
	MapList(context.Context, *MapListRequest, *MapListResponse) error
}

func RegisterRoomManagerExtServiceHandler(s server.Server, hdlr RoomManagerExtServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&RoomManagerExtService{hdlr}, opts...))
}

type RoomManagerExtService struct {
	RoomManagerExtServiceHandler
}

func (h *RoomManagerExtService) Move(ctx context.Context, in *MoveRequest, out *MoveResponse) error {
	return h.RoomManagerExtServiceHandler.Move(ctx, in, out)
}

func (h *RoomManagerExtService) InGame(ctx context.Context, in *InGameRequest, out *InGameResponse) error {
	return h.RoomManagerExtServiceHandler.InGame(ctx, in, out)
}

func (h *RoomManagerExtService) MapList(ctx context.Context, in *MapListRequest, out *MapListResponse) error {
	return h.RoomManagerExtServiceHandler.MapList(ctx, in, out)
}

func init() { proto.RegisterFile("sceneManager.ext.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x92, 0xdb, 0x4a, 0xfb, 0x40,
	0x10, 0xc6, 0xff, 0xdb, 0xd3, 0x9f, 0x4e, 0xd5, 0xb6, 0xa3, 0x96, 0x90, 0xab, 0x92, 0xab, 0x40,
	0x21, 0x60, 0xf5, 0x15, 0x44, 0x02, 0x06, 0x4a, 0x7c, 0x82, 0x4d, 0x32, 0x48, 0x2e, 0xf6, 0x60,
	0x76, 0x5b, 0x7a, 0xe3, 0x0b, 0x09, 0xbe, 0xa3, 0xe4, 0xd8, 0x04, 0xef, 0xbd, 0xdb, 0xf9, 0xcd,
	0x37, 0x7c, 0x1f, 0x33, 0x0b, 0x1b, 0x93, 0x92, 0xa4, 0x88, 0x4b, 0xfe, 0x4e, 0x45, 0x40, 0x67,
	0x1b, 0xe8, 0x42, 0x59, 0x85, 0x23, 0x9d, 0xb8, 0xab, 0x54, 0x09, 0xa1, 0xe4, 0x85, 0x7a, 0x9f,
	0xb0, 0x88, 0xd4, 0x89, 0x62, 0xfa, 0x38, 0x92, 0xb1, 0x78, 0x07, 0x53, 0xc1, 0x75, 0x98, 0x39,
	0x6c, 0xcb, 0xfc, 0x71, 0x5c, 0x17, 0xb8, 0x83, 0x85, 0x29, 0xd2, 0x83, 0x32, 0xb9, 0xcd, 0x95,
	0x74, 0x46, 0x5b, 0xe6, 0x2f, 0xf6, 0xf3, 0x40, 0x27, 0xc1, 0x41, 0xe5, 0xd2, 0xc6, 0xfd, 0x6e,
	0x29, 0xce, 0x8c, 0xed, 0xc4, 0xe3, 0x5f, 0xe2, 0x5e, 0xd7, 0xfb, 0x62, 0x70, 0x55, 0xfb, 0x1b,
	0xad, 0xa4, 0xa1, 0xbf, 0x0e, 0x80, 0x1b, 0x98, 0x1d, 0x0d, 0x15, 0x61, 0xe6, 0x4c, 0x2a, 0xc3,
	0xa6, 0x42, 0x84, 0x89, 0xe4, 0x82, 0x9c, 0xe9, 0x96, 0xf9, 0xf3, 0xb8, 0x7a, 0x7b, 0x4b, 0xb8,
	0x0e, 0xe5, 0x0b, 0x17, 0xed, 0xb6, 0xbc, 0x15, 0xdc, 0xb4, 0xa0, 0x8e, 0x5f, 0x92, 0x88, 0xeb,
	0xd7, 0xdc, 0xd8, 0x56, 0xb3, 0x86, 0x65, 0x47, 0x6a, 0xd1, 0xfe, 0x9b, 0xc1, 0x7d, 0xac, 0x94,
	0x68, 0x6e, 0xf4, 0x7c, 0xb6, 0x6f, 0x54, 0x9c, 0xf2, 0x94, 0x70, 0x07, 0x93, 0x72, 0x1b, 0xb8,
	0x2c, 0xd3, 0xf6, 0xee, 0xe2, 0xae, 0x2e, 0xa0, 0x71, 0xfa, 0x87, 0x0f, 0x30, 0xab, 0xdd, 0x71,
	0x5d, 0x76, 0x07, 0xd1, 0x5c, 0xec, 0xa3, 0x6e, 0xe4, 0x09, 0xfe, 0x37, 0x61, 0xb0, 0x12, 0x0c,
	0xb3, 0xba, 0xb7, 0x03, 0xd6, 0x4e, 0x25, 0xb3, 0xea, 0xab, 0x3c, 0xfe, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x56, 0xe5, 0x73, 0x3e, 0x5a, 0x02, 0x00, 0x00,
}
